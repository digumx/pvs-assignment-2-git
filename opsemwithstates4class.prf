(opsemwithstates
 (s0_TCC1 0
  (s0_TCC1-1 nil 3794761553
   ("" (instantiate 1 "LAMBDA v: 0") (("" (propax) nil nil)) nil)
   ((istatet type-eq-decl nil opsemwithstates nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (statet type-eq-decl nil opsemwithstates nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (vars type-decl nil opsemwithstates nil))
   nil (s0 existence "" "istatet")))
 (Minus_TCC1 0
  (Minus_TCC1-1 nil 3794761553
   ("" (skosimp*) (("" (assert) nil nil)) nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil
   (Minus subtype
    "(number_fields.-)(opsemwithstates.a, opsemwithstates.b)" "nat")))
 (aeval_TCC1 0
  (aeval_TCC1-1 nil 3794761553
   ("" (auto-rewrite-defs)
    (("" (skosimp*) (("" (rewrite -1 *) (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((<< adt-def-decl "(strict_well_founded?[aexpt])" opsemwithstates
     nil))
   nil
   (aeval termination
    "opsemwithstates.aeval(opsemwithstates.st, opsemwithstates.l)"
    "nil")))
 (aeval_TCC2 0
  (aeval_TCC2-1 nil 3794761553
   ("" (auto-rewrite-defs)
    (("" (skosimp*) (("" (rewrite -1 *) (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((<< adt-def-decl "(strict_well_founded?[aexpt])" opsemwithstates
     nil))
   nil
   (aeval termination
    "opsemwithstates.aeval(opsemwithstates.st, opsemwithstates.r)"
    "nil")))
 (aeval_TCC3 0
  (aeval_TCC3-1 nil 3794761553
   ("" (auto-rewrite-defs)
    (("" (skosimp*) (("" (rewrite -1 *) (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((<< adt-def-decl "(strict_well_founded?[aexpt])" opsemwithstates
     nil))
   nil
   (aeval termination
    "opsemwithstates.aeval(opsemwithstates.st, opsemwithstates.l)"
    "nil")))
 (aeval_TCC4 0
  (aeval_TCC4-1 nil 3794761553
   ("" (auto-rewrite-defs)
    (("" (skosimp*) (("" (rewrite -1 *) (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((<< adt-def-decl "(strict_well_founded?[aexpt])" opsemwithstates
     nil))
   nil
   (aeval termination
    "opsemwithstates.aeval(opsemwithstates.st, opsemwithstates.r)"
    "nil")))
 (aeval_TCC5 0
  (aeval_TCC5-1 nil 3794761553
   ("" (auto-rewrite-defs)
    (("" (skosimp*) (("" (rewrite -1 *) (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((<< adt-def-decl "(strict_well_founded?[aexpt])" opsemwithstates
     nil))
   nil
   (aeval termination
    "opsemwithstates.aeval(opsemwithstates.st, opsemwithstates.l)"
    "nil")))
 (aeval_TCC6 0
  (aeval_TCC6-1 nil 3794761553
   ("" (auto-rewrite-defs)
    (("" (skosimp*) (("" (rewrite -1 *) (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((<< adt-def-decl "(strict_well_founded?[aexpt])" opsemwithstates
     nil))
   nil
   (aeval termination
    "opsemwithstates.aeval(opsemwithstates.st, opsemwithstates.r)"
    "nil")))
 (beval_TCC1 0
  (beval_TCC1-1 nil 3794761553
   ("" (auto-rewrite-defs)
    (("" (skosimp*) (("" (rewrite -1 *) (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((<< adt-def-decl "(strict_well_founded?[bexpt])" opsemwithstates
     nil))
   nil
   (beval termination
    "opsemwithstates.beval(opsemwithstates.st, opsemwithstates.exp)"
    "nil")))
 (beval_TCC2 0
  (beval_TCC2-1 nil 3794761553
   ("" (auto-rewrite-defs)
    (("" (skosimp*) (("" (rewrite -1 *) (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((<< adt-def-decl "(strict_well_founded?[bexpt])" opsemwithstates
     nil))
   nil
   (beval termination
    "opsemwithstates.beval(opsemwithstates.st, opsemwithstates.l)"
    "nil")))
 (beval_TCC3 0
  (beval_TCC3-1 nil 3794761553
   ("" (auto-rewrite-defs)
    (("" (skosimp*) (("" (rewrite -2 *) (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((<< adt-def-decl "(strict_well_founded?[bexpt])" opsemwithstates
     nil))
   nil
   (beval termination
    "opsemwithstates.beval(opsemwithstates.st, opsemwithstates.r)"
    "nil")))
 (beval_TCC4 0
  (beval_TCC4-1 nil 3794761553
   ("" (auto-rewrite-defs)
    (("" (skosimp*) (("" (rewrite -1 *) (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((<< adt-def-decl "(strict_well_founded?[bexpt])" opsemwithstates
     nil))
   nil
   (beval termination
    "opsemwithstates.beval(opsemwithstates.st, opsemwithstates.l)"
    "nil")))
 (beval_TCC5 0
  (beval_TCC5-1 nil 3794761553
   ("" (auto-rewrite-defs)
    (("" (skosimp*) (("" (rewrite -2 *) (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((<< adt-def-decl "(strict_well_founded?[bexpt])" opsemwithstates
     nil))
   nil
   (beval termination
    "opsemwithstates.beval(opsemwithstates.st, opsemwithstates.r)"
    "nil"))))

